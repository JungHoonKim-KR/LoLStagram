plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.moowork.node' version '1.3.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'
//    implementation 'org.springframework.boot:spring-boot-devtools'

// https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    //OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //json webtoken
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    //org json
    implementation 'org.json:json:20200518'

    //WebFlux
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    implementation 'io.projectreactor:reactor-core:3.5.3'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator 추가
    implementation 'io.micrometer:micrometer-registry-prometheus' //추가
}

tasks.named('test') {
    useJUnitPlatform()
}


////react
//def frontendDir = "$projectDir/src/main/reactfront"
//
//task installReact(type: Exec) {
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "audit", "fix"
//        commandLine 'npm.cmd', 'install' }
//    else {
//        commandLine "npm", "audit", "fix"
//        commandLine 'npm', 'install'
//    }
//}
//task buildReact(type: Exec) {
//    dependsOn "installReact"
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "run-script", "build"
//    } else {
//        commandLine "npm", "run-script", "build"
//    }
//}
//
//task copyReactBuildFiles(type: Copy) {
//    dependsOn "buildReact"
//    from "$frontendDir/build"
//    into "$projectDir/src/main/resources/static"
//    outputs.dir("$projectDir/src/main/resources/static")
//}
//buildReact.dependsOn(installReact)
//copyReactBuildFiles.dependsOn(buildReact)
//processResources.dependsOn(copyReactBuildFiles)
//
//sourceSets {
//    main {
//        resources { srcDirs = ["$projectDir/src/main/resources", "$projectDir/src/main/resources/static"] }
//    }
//}
